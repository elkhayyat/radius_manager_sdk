import decimal

from models.base import BaseModel


class ServicePlan(BaseModel):
    attribute_mapper = {
        "service_id": "srvid",
        "service_name": "srvname",
        "download_rate": "downrate",
        "upload_rate": "uprate",
        "does_download_limit": "limitdl",
        "does_upload_limit": "limitul",
        "does_total_limit": "limitcomb",
        "does_expiry_limit": "limitexpiration",
        "does_online_time_limit": "limituptime",
        "ip_pool_name": "poolname",
        "unit_price": "unitprice",
        "additional_unit_price": "unitpriceadd",
        "expiry_date_base": "timebaseexp",
        "online_time_base": "timebaseonline",
        "expiry_date_to_add": "timeunitexp",
        "online_time_to_add": "timeunitonline",
        "download_traffic_to_add": "trafficunitdl",
        "upload_traffic_to_add": "trafficunitul",
        "total_traffic_to_add": "trafficunitcomb",
        "initial_expiry_date_to_add": "inittimeexp",
        "initial_online_time_to_add": "inittimeonline",
        "initial_download_bytes": "initdl",
        "initial_upload_bytes": "initul",
        "initial_total_bytes": "inittotal",
        "service_type": "srvtype",
        "expiry_date_addition_mode": "timeaddmodeexp",
        "online_time_addition_mode": "timeaddmodeonline",
        "traffic_addition_mode": "trafficaddmode",
        "is_monthly_plan": "monthly",
        "enable_add_credits": "enaddcredits",
        "minimum_amount": "minamount",
        "minimum_additional_amount": "minamountadd",
        "reset_counters_if_date_expired": "resetctrdate",
        "reset_counters_if_traffic_negative": "resetctrneg",
        "enable_postpaid_download_calculation": "pricecalcdownload",
        "enable_postpaid_upload_calculation": "pricecalcupload",
        "enable_postpaid_online_time_calculation": "pricecalcuptime",
        "unit_price_vat": "unitpricetax",
        "additional_unit_price_vat": "unitpriceaddtax",
        "enable_burst": "enableburst",
        "download_burst_limit": "dlburstlimit",
        "upload_burst_limit": "ulburstlimit",
        "download_burst_threshold": "dlburstthreshold",
        "upload_burst_threshold": "ulburstthreshold",
        "download_burst_time": "dlbursttime",
        "upload_burst_time": "ulbursttime",
        "is_enabled": "enableservice",
        "download_quota": "dlquota",
        "upload_quota": "ulquota",
        "total_quota": "combquota",
        "online_time_quota": "timequota",
        "priority": "priority",
        "next_expired_service_id": "nextsrvid",
        "next_daily_service_id": "dailynextsrvid",
        "next_disabled_service_id": "disnextsrvid",
        "is_available_in_user_control_panel": "availucp",
        "enable_automatic_renewal": "renew",
        "enable_carry_over": "carryover",
        "download_policy_map": "policymapdl",
        "upload_policy_map": "policymapul",
        "custom_attributes": "custattr",
        "generate_tftp": "gentftp",
        "enable_generate_cm_configuration": "cmcfg",
        "advanced_cm_configuration": "advcmcgf",
        "minimal_additional_quantity": "addamount",
        "ignore_static_ip": "ignstaticip"
    }

    def __init__(self,
                 service_id: int = None, service_name: str = None, download_rate: int = None, upload_rate: int = None,
                 does_download_limit: int = None, does_upload_limit: int = None, does_total_limit: int = None,
                 does_expiry_limit: int = None, does_online_time_limit: int = None, ip_pool_name: str = None,
                 unit_price: decimal = None, additional_unit_price: decimal = None, expiry_date_base: int = None,
                 online_time_base: int = None, expiry_date_to_add: int = None, online_time_to_add: int = None,
                 download_traffic_to_add: int = None, upload_traffic_to_add: int = None,
                 total_traffic_to_add: int = None, initial_expiry_date_to_add: int = None,
                 initial_online_time_to_add: int = None, initial_download_bytes: int = None,
                 initial_upload_bytes: int = None, initial_total_bytes: int = None, service_type: int = None,
                 expiry_date_addition_mode: int = None, online_time_addition_mode: int = None,
                 traffic_addition_mode: int = None, is_monthly_plan: int = None, enable_add_credits: int = None,
                 minimum_amount: decimal = None, minimum_additional_amount: decimal = None,
                 reset_counters_if_date_expired: int = None, reset_counters_if_traffic_negative: int = None,
                 enable_postpaid_download_calculation: int = None, enable_postpaid_upload_calculation: int = None,
                 enable_postpaid_online_time_calculation: int = None, unit_price_vat: decimal = None,
                 additional_unit_price_vat: decimal = None, enable_burst: int = None,
                 download_burst_limit: int = None, upload_burst_limit: int = None, download_burst_threshold: int = None,
                 upload_burst_threshold: int = None, download_burst_time: int = None, upload_burst_time: int = None,
                 is_enabled: int = None, download_quota: int = None, upload_quota: int = None, total_quota: int = None,
                 online_time_quota: int = None, priority: int = None, next_expired_service_id: int = None,
                 next_daily_service_id: int = None, next_disabled_service_id: int = None,
                 is_available_in_user_control_panel: int = None, enable_automatic_renewal: int = None,
                 enable_carry_over: int = None, download_policy_map: int = None, upload_policy_map: int = None,
                 custom_attributes: str = None, generate_tftp: str = None, enable_generate_cm_configuration: str = None,
                 advanced_cm_configuration: str = None, minimal_additional_quantity: decimal = None,
                 ignore_static_ip: int = None

                 ):
        super().__init__(**self.remove_self_from_kwargs(**locals()))
